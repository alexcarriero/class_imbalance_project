calibration_plot()
a %>%
filter(pair_id == 6) %>%
mutate(class = as.numeric(class) - 1) %>%
calibration_plot()
a <- import_from_folder("sc2", "sim-results/recalibrated/predictions")
a %>%
filter(pair_id == 6) %>%
mutate(class = as.numeric(class) - 1) %>%
calibration_plot()
a <- import_from_folder("sc2", "pre-override/predictions")
a %>%
filter(pair_id == 6) %>%
mutate(
pred = as.numeric(pred),
class = as.numeric(class)) %>%
calibration_plot()
a %>%
filter(pair_id == 7) %>%
mutate(class = as.numeric(class) - 1) %>%
calibration_plot()
a <- import_from_folder("sc2", "sim-results/recalibrated/predictions")
a %>%
filter(pair_id == 7) %>%
mutate(class = as.numeric(class) - 1) %>%
calibration_plot()
a <- import_from_folder("sc2", "pre-override/predictions")
a %>%
filter(pair_id == 7) %>%
mutate(
pred = as.numeric(pred),
class = as.numeric(class)) %>%
calibration_plot()
sc1 <-
1:15 %>%
map(function(x) recalibrate_everything(x, "sc2"))
library(tidyverse)
library(ggridges)
library(patchwork)
source("functions.R")
source("process_results.R")
sc2 <-
1:100 %>%
map(function(x) recalibrate_everything(x, "sc2"))
sc2 <-
83 %>%
map(function(x) recalibrate_everything(x, "sc2"))
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
df
# save re-calibrated probabilities
r_df <-
df %>%
recalibrate_and_save()
recalibrated_probabilities <- function(probs, class){
# computing re-calibrated probabilities
if(any(is.na(probs)) == TRUE){
return(NA)
}
if(any(is.na(probs)) == FALSE & any(probs < 0) == TRUE){
probs[probs < 0 ] <- 1e-10
}
if(any(is.na(probs)) == FALSE & any(probs > 1) == TRUE){
probs[probs > 1 ] <- 1 - 1e-10
}
if(sum(probs == 1) != 0){
probs[probs == 1] <- 1 - 1e-10
}
if(sum(probs == 0) != 0){
probs[probs == 0] <- 1e-10
}
# ensure correct factor levels
class  <- factor(class, levels=c(0,1), ordered = TRUE)
# model
a <- tryCatch.W.E(
expr    = {
mod  <- glm(class ~ 1, offset = log(probs/(1-probs)), family = "binomial")
pred <- predict(mod, type = "response")
}
)
return(list("pred" = a$value, "warning" = a$warning))
}
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)) %>%
filter(pair_id == 11)
exp <-
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)) %>%
filter(problematic == "1")
exp
exp <-
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)) %>%
filter(algorithm == "rusboost")
exp <-
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)) %>%
filter(algorithms == "rusboost")
exp
hm <- recalibrated_probabilities(exp$pred, exp$class)
hm$pred
hm$warning
exp <-
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class))
hm <- recalibrated_probabilities(exp$pred, exp$class)
library(tidyverse)
library(pROC)
library(simsalapar)
source("process_results.R")
source("functions.R")
sc2 <-
83 %>%
map(function(x) recalibrate_everything(x, "sc2"))
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
```
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id)
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
group_modify(~recalibrate(.))
library(tidyverse)
library(pROC)
library(simsalapar)
source("process_results.R")
source("functions.R")
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
group_modify(~recalibrate(.))
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
group_modify(~recalibrated_probabilities(.x$pred, .x$class))
library(tidyverse)
library(pROC)
library(simsalapar)
source("process_results.R")
source("functions.R")
sc2 <-
83 %>%
map(function(x) recalibrate_everything(x, "sc2"))
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
group_modify(~recalibrate(.))
library(tidyverse)
library(pROC)
library(simsalapar)
source("process_results.R")
source("functions.R")
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
group_by(pair_id) %>%
group_modify(~recalibrate(.))
library(tidyverse)
library(pROC)
library(simsalapar)
source("process_results.R")
source("functions.R")
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
# save re-calibrated probabilities
r_df <-
df %>%
recalibrate_and_save()
r_stats <-
r_df %>%
get_stats_recalibrated()
r_stats
i = 83
scN = "sc2"
df <-
i %>%
paste0("./results/", scN, "/sim-results/predictions/", scN, "_", . , ".rds") %>%
map(readRDS)
# save re-calibrated probabilities
r_df <-
df %>%
recalibrate_and_save()
df %>%
as.data.frame() %>%
mutate(
pair_id = as.factor(pair_id),
pred = as.numeric(pred),
class = as.factor(class)
) %>%
filter(pair_id == 12)
sc2 <-
1:100 %>%
map(function(x) recalibrate_everything(x, "sc2"))
library(tidyverse)
library(ggridges)
library(patchwork)
source("functions.R")
source("process_results.R")
sc2 <-
1:100 %>%
map(function(x) recalibrate_everything(x, "sc2"))
sc2 <-
101:1000 %>%
map(function(x) recalibrate_everything(x, "sc2"))
which_iters <- cbind("start_iter" = start_iter, "stop_iter" = stop_iter)
start_iter <- c(seq(1,   1991, by = 10))
stop_iter  <- c(seq(10,  2000, by = 10))
which_iters <- cbind("start_iter" = start_iter, "stop_iter" = stop_iter)
which_iter[100,1]
which_iters[100,1]
which_iters[101,1]
which_iters[200,2]
library(tidyverse)
library(ggridges)
library(patchwork)
source("process_results.R")
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 400, scN)
devtools::install_github("krlmlr/ulimit")
library("krlmlr/ulimit")
("ulimit")
library("ulimit")
ulimit::memory_limit(2000)
ulimit::memory_limit(10000)
ulimit::memory_limit(6000)
library("ulimit")
ulimit::memory_limit(6000)
Cstack_info()
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
Cstack_info()
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 1000, scN)
scN = "sc1"
make_grid_plot(1, 2, scN)
scN = "sc1"
make_grid_plot(1, 2, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 2, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 2, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 2, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 1000, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 500, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc1"
make_grid_plot(1, 400, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc2"
make_grid_plot(1, 400, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
scN = "sc4"
make_grid_plot(1, 400, scN)
scN = "sc5"
make_grid_plot(1, 400, scN)
library(tidyverse)
library(ggridges)
library(patchwork)
library(pROC)
library(simsalapar)
source("functions.R")
source("process_results.R")
sc5 <-
1:2000 %>%
map(function(x) recalibrate_everything(x, "sc5"))
scN = "sc5"
make_grid_plot(1, 400, scN)
sc6 <- get_summary("sc6")
# sc6
test_again <- sc6$overall_dataframe %>%
mutate(iter = as.numeric(iter))
a <- unique(test_again$iter)
b <- as.numeric(c(1:1000))
to_do <- setdiff(b,a)
to_do
# Libraries --------------------------------------------------------------------
library(tidyverse)
library(MASS)
library(caret)
library(pROC)
setwd("/Users/alexcarriero/Desktop/thesis github/masters_thesis/simulation_series/")
# Manual Override Package Installation
# ROSE
source("packages/ROSE-master/R/data_balancing_funcs.R")
source("packages/ROSE-master/R/estimation_funcs.R")
source("packages/ROSE-master/R/ROSE_eval.R")
# IRIC
library(RANN)
library(foreach)
source("packages/IRIC-master/R/Ensemble-based level/EasyEnsemble.R")
source("packages/IRIC-master/R/Data level/SmoteENN.R")
source("packages/IRIC-master/R/Data level/SMOTE.R")
# ebmc
source("packages/ebmc-master/R/ebmc.R")
# simsalapar
source("packages/simsalapar-master/R/tryCatchWE.R")
# Helpers ----------------------------------------------------------------------
# functions
source("functions2.R")
# Libraries --------------------------------------------------------------------
library(tidyverse)
library(MASS)
library(caret)
library(pROC)
setwd("/Users/alexcarriero/Desktop/thesis github/masters_thesis/simulation_series/")
# Manual Override Package Installation
# ROSE
source("packages/ROSE-master/R/data_balancing_funcs.R")
source("packages/ROSE-master/R/estimation_funcs.R")
source("packages/ROSE-master/R/ROSE_eval.R")
# IRIC
library(RANN)
library(foreach)
source("packages/IRIC-master/R/Ensemble-based level/EasyEnsemble.R")
source("packages/IRIC-master/R/Data level/SmoteENN.R")
source("packages/IRIC-master/R/Data level/SMOTE.R")
# ebmc
source("packages/ebmc-master/R/ebmc.R")
# simsalapar
source("packages/simsalapar-master/R/tryCatchWE.R")
# Helpers ----------------------------------------------------------------------
# functions
source("functions2.R")
# seeds
seed.farm <- readRDS("seeds/seedfarm.RData")
# simulation scenarios
set <- readRDS("data-generating-mechanism/set.RData")
scenario <- 3
start    <- 1289 # which_iters[slurm_id,1]
stop     <- 1289 # which_iters[slurm_id,2]
sim_in_series(scenario, start, stop)
sc3_1289 <- readRDS("~/Desktop/thesis github/masters_thesis/simulation_series/sim_results/rep_checks/sc3_1289.rds")
View(sc3_1289)
test_again <- sc6$overall_dataframe %>%
mutate(iter = as.numeric(iter))
a <- unique(test_again$iter)
b <- as.numeric(c(1:1000))
to_do_sc6 <- setdiff(b,a)
to_do_sc6
saveRDS(to_do_sc6, file = "to_do_sc6.rds")
to_do_sc6
length(to_do_sc6)
